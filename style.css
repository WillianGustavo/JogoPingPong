@charset "UTF-8";

body{
    margin: 0px;
    background-color: #aaa;
}
#dvPainel{
    display: flex;
    height: 50px;
    align-items: center;
}
.itemPainel{
    margin: 5px;
}
#dvJogo{
    width: 960px;
    height: 500px;
    border: 1px solid #000;
    background-color: #000;
}
#dvBola{
    position: absolute;
    top: 240px;
    left: 475px;
    width: 20px;
    height: 20px;
    background-color: #8888;
}
.barra{
    position: absolute;
    width: 20px;
    height: 140px;
    background-color: #888;
    top: 180px;
}
.esquerda{
    left: 10px;
}
.direita{
    left: 930px;
}

Adicionar comentário para a turma...


Aviso: "<!DOCTYPE html> <html lang="pt-br">…"
IVAN GABRIEL HUK VACHACK
Criado em: 16:5816:58
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jogo do PingPong</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="dvJogo">
        <div id="dvBola"></div><!--Div para a bola-->
        <div id="dvJogador" class="barra esquerda"></div><!--Barra do jogador-->
        <div id="dvCpu" class="barra direita"></div><!--Elemento da CPU-->
    </div>
    <div id="dvPainel"><!--Div para o painel-->
        <div class="itemPainel">
            <label>Pontos:</label><!--Mensagem dos pontos-->
            <input type="text" name="" id="txtPontos" value="0" size="10"><!--Imput de texto para mostrar a quantidade de pontos-->
        </div>    
        <div class="itemPainel"><!--Div para o botão-->
            <button id="btIniciar">Iniciar</button><!--Botão de iniciar-->  
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>

Adicionar comentário para a turma...


Aviso: "Código java: const currentPlayer =…"
IVAN GABRIEL HUK VACHACK
Criado em: 23 de ago.23 de ago.
Código java:

const currentPlayer = document.querySelector(".currentPlayer");

let selected;
let player = "X";

let positions = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
  [1, 4, 7],
  [2, 5, 8],
  [3, 6, 9],
  [1, 5, 9],
  [3, 5, 7],
];

function init() {
  selected = [];

  currentPlayer.innerHTML = `JOGADOR DA VEZ: ${player}`;

  document.querySelectorAll(".game button").forEach((item) => {
    item.innerHTML = "";
    item.addEventListener("click", newMove);
  });
}

init();

function newMove(e) {
  const index = e.target.getAttribute("data-i");
  e.target.innerHTML = player;
  e.target.removeEventListener("click", newMove);
  selected[index] = player;

  setTimeout(() => {
    check();
  }, [100]);

  player = player === "X" ? "O" : "X";
  currentPlayer.innerHTML = `JOGADOR DA VEZ: ${player}`;
}

function check() {
  let playerLastMove = player === "X" ? "O" : "X";

  const items = selected
    .map((item, i) => [item, i])
    .filter((item) => item[0] === playerLastMove)
    .map((item) => item[1]);

  for (pos of positions) {
    if (pos.every((item) => items.includes(item))) {
      alert("O JOGADOR '" + playerLastMove + "' GANHOU!");
      init();
      return;
    }
  }

  if (selected.filter((item) => item).length === 9) {
    alert("DEU EMPATE!");
    init();
    return;
  }
}